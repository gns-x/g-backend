generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  password String
  name     String
  role     Role   @default(STAFF)
}

model Student {
  id           String         @id @default(cuid())
  name         String
  cardId       String         @unique
  email        String
  grade        String
  balance      Float          @default(0)
  externalCode String         @unique @default("defaultCode")
  photo        String?
  parentId     String?
  teacherId    String?
  PickupRecord PickupRecord[]
  parent       Parent?        @relation(fields: [parentId], references: [id])
  teacher      Teacher?       @relation(fields: [teacherId], references: [id])
  Subscription Subscription[]
  Transaction  Transaction[]
}

model Parent {
  id           String         @id @default(cuid())
  accessCode   String         @unique
  name         String
  PickupRecord PickupRecord[]
  students     Student[]
}

model Teacher {
  id         String    @id @default(cuid())
  name       String
  grade      String
  accessCode String    @unique
  students   Student[]
}

model PickupRecord {
  id        String       @id @default(cuid())
  studentId String
  parentId  String
  status    PickupStatus
  timestamp DateTime     @default(now())
  location  Json?
  parent    Parent       @relation(fields: [parentId], references: [id])
  student   Student      @relation(fields: [studentId], references: [id])
}

model Product {
  id          String        @id
  name        String
  price       Float
  category    Category      @default(FOOD)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  Transaction Transaction[]
}

model Subscription {
  id        String   @id
  studentId String
  type      SubType
  amount    Float
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  Student   Student  @relation(fields: [studentId], references: [id])
}

model Transaction {
  id        String   @id
  studentId String
  productId String
  amount    Float
  quantity  Int
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id])
  Student   Student  @relation(fields: [studentId], references: [id])
}

enum Role {
  ADMIN
  STAFF
  PARENT
  TEACHER
}

enum Category {
  FOOD
  BEVERAGE
  SNACK
}

enum SubType {
  ANNUAL
  TERM
}

enum PickupStatus {
  PENDING
  PARENT_ARRIVED
  COMPLETED
  CANCELLED
}
